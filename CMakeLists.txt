cmake_minimum_required(VERSION 3.21)
project(ParallelProgramming)
set(CMAKE_CXX_STANDARD 14)
FIND_PACKAGE( OpenMP REQUIRED)

if(CMAKE_HOST_SYSTEM_PROCESSOR MATCHES "x86_64")
    message("x86_64 architecture detected")
    endif()
include_directories("C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Include")
link_directories("C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64")
link_libraries(msmpi)

if(OPENMP_FOUND)
    message("OPENMP FOUND")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
endif()

add_executable(simplified_Adp serial/adp_algorithms.cpp)
add_executable(sequential serial/sequential.cpp)
add_executable(max_successor serial/max_successor.cpp)
add_executable(group_parallel parallel_all_queries/group_parallel.cpp)
add_executable(block_task parallel_all_queries/block_task.cpp)
add_executable(early_stop parallel_each_query/early_stop.cpp)
add_executable(parallel_intersection parallel_each_query/parallel_intersection.cpp)
add_executable(openMP_block_task openMP_parallel/openMP_block_task.cpp)
add_executable(openMP_early_stop openMP_parallel/openMP_early_stop.cpp)
add_executable(svs_algorithms serial/svs_algorithms.cpp)
add_executable(hash_find serial/hash_find.cpp)
add_executable(parallel_sequential parallel_each_query/parallel_sequential.cpp)
add_executable(parallel_sequential_with_serial_search parallel_each_query/parallel_sequential_with_serial_search.cpp)
add_executable(zip_zap_SIMD SIMD/zip_zap_SIMD.cpp)
add_executable(mpi_hello MPI/mpi_hello.cpp)
add_executable(simplified_adp_mpi MPI/simplified_adp_mpi.cpp)
add_executable(zip_zap_mpi MPI/zip_zap_mpi.cpp)
add_executable(test_simd SIMD/test_simd.cpp)
add_executable(block_task_mpi MPI/block_task_mpi.cpp)
add_executable(zip_zap_refined serial/zip_zap_refined.cpp)
add_executable(svs_range_based serial/svs_range_based.cpp)
add_executable(test_binary_search serial/test/test_binary_search.cpp)
add_executable(adp_range_based serial/adp_range_based.cpp)
add_executable(svs_range_without_sort serial/svs_range_without_sort.cpp)
add_executable(adp_range_based_refine serial/adp_range_based_refine.cpp)